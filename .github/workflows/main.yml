name: Deploy to Aliyun

on:
  push:
    branches: [ main ]  # 当 main 分支有推送时触发
  pull_request:
    branches: [ main ]  # 当有 PR 到 main 分支时触发

env:
  GO_VERSION: '1.21'
  APP_NAME: 'media-server'
  DEPLOY_PATH: '/www/wwwroot/mediaBE'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build
      run: |
        go mod tidy
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o media-server

    - name: Deploy to Aliyun
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "media-server,static/*"
        target: "/www/wwwroot/mediaBE"
        debug: true

    - name: Execute remote commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        debug: true
        script: |
          cd /www/wwwroot/mediaBE
          chmod +x media-server
          if pgrep media-server; then
            sudo pkill media-server
          fi
          nohup ./media-server > server.log 2>&1 &
          sleep 5
          if pgrep media-server; then
            echo "Server started successfully"
          else
            echo "Server failed to start"
            cat server.log
            exit 1
          fi

    - name: Database Migration
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        debug: true
        script: |
          cd ${{ env.DEPLOY_PATH }}
          ./media-server migrate


